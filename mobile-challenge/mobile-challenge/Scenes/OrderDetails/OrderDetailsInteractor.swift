//
//  OrderDetailsInteractor.swift
//  mobile-challenge
//
//  Created by Brendoon Ryos on 01/03/19.
//  Copyright (c) 2019 Brendoon Ryos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol OrderDetailsBusinessLogic {
  func fetchOrderDetails() 
}

protocol OrderDetailsDataStore {
  var orderId: String? { get set }
  var token: String? { get set }
}

class OrderDetailsInteractor: OrderDetailsBusinessLogic, OrderDetailsDataStore {
  var presenter: OrderDetailsPresentationLogic?
  var worker: OrderDetailsWorker?
  
  var token: String?
  var orderId: String?
  
  init(worker: OrderDetailsWorker = OrderDetailsWorker()) {
    self.worker = worker
  }
  
  // MARK: Fetch Orders Details
  func fetchOrderDetails() {
    let request = Orders.Details.Request(token: token!, id: orderId!)
    worker?.fetchOrderDetails(request: request, completion: { result in
      switch result {
      case .success(let data):
        let response = Orders.Details.Response(order: data)
        self.presenter?.presentOrderDetails(response: response)
      case .failure(let error):
        let response = Orders.All.Response(error: error)
        self.presenter?.presentErrorMessage(response: response)
      }
    })
  }
}
