//
//  LoginViewController.swift
//  mobile-challenge
//
//  Created by Brendoon Ryos on 01/03/19.
//  Copyright (c) 2019 Brendoon Ryos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
  func displayLoginSucceeded(viewModel: Login.SignIn.ViewModel)
  func displayErrorMessage(viewModel: Login.SignIn.ViewModel)
}

class LoginViewController: UIViewController {
  var interactor: LoginBusinessLogic?
  var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
  
  let loginView = LoginView.loadFromNib()
  
  override var preferredStatusBarStyle: UIStatusBarStyle { return .lightContent }

  // MARK: Object lifecycle
  init() {
    super.init(nibName: .none, bundle: .none)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    fatalError("init(coder:) has not been implemented")
  }
  
  // MARK: Setup
  private func setup() {
    let viewController = self
    let interactor = LoginInteractor()
    let presenter = LoginPresenter()
    let router = LoginRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  override func viewDidLoad() {
    super.viewDidLoad()
    setupView()
    signInWithSavedParams()
  }
  
  override func loadView() {
    self.view = loginView
  }
  
  func setupView() {
    loginView.signInParams = signInHandler
  }
  
  func signInHandler(username: String, password: String) {
    let request = Login.SignIn.Request(username: username, password: password)
    interactor?.signIn(request: request)
  }
  
  // MARK: Sign In With Saved Params
  func signInWithSavedParams() {
    interactor?.signInWithSavedParams()
  }
}

extension LoginViewController: LoginDisplayLogic {
  func displayLoginSucceeded(viewModel: Login.SignIn.ViewModel) {
    router?.routeToOrders()
    loginView.hideLoadingView()
  }
  
  func displayErrorMessage(viewModel: Login.SignIn.ViewModel) {
    alert(message: "Email ou senha inv√°lido.", title: "Login Falhou")
    loginView.hideLoadingView()
  }
}
