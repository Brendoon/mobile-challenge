//
//  LoginInteractor.swift
//  mobile-challenge
//
//  Created by Brendoon Ryos on 01/03/19.
//  Copyright (c) 2019 Brendoon Ryos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

protocol LoginBusinessLogic {
  func signIn(request: Login.SignIn.Request)
  func signInWithSavedParams()
}

protocol LoginDataStore {
  var loginResponse: LoginResponse? { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker?
  var loginResponse: LoginResponse?
  
  init(worker: LoginWorker? = LoginWorker()) {
    self.worker = worker
  }
  
  private func checkResult(_ result: Result<LoginResponse>) {
    switch result {
    case .success(let data):
      self.loginResponse = data
      let response = Login.SignIn.Response()
      self.presenter?.presentLoginSucceeded(response: response)
    case .failure(let error):
      let response = Login.SignIn.Response(error: error)
      self.presenter?.presentErrorMessage(response: response)
    }
  }
  
  // MARK: Sign In
  func signIn(request: Login.SignIn.Request) {
    worker?.signIn(request: request, completion: { result in
      self.checkResult(result)
    })
  }
  
  func signInWithSavedParams() {
    worker?.signInWithSavedParams(completion: { result in
      self.checkResult(result)
    })
  }
}
